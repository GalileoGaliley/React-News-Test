{"ast":null,"code":"const localSetting = JSON.parse(localStorage.getItem(\"settings\"));\nlet initialState;\n\nif (localSetting) {\n  initialState = {\n    light: localSetting.light,\n    font: localSetting.font,\n    pageSize: localSetting.pageSize\n  };\n} else {\n  initialState = {\n    light: 'light',\n    font: 12,\n    pageSize: 20\n  };\n}\n\nexport default function settingReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'CHANGE_SETTING':\n      {\n        return {\n          light: action.payload.light,\n          font: action.payload.font,\n          pageSize: action.payload.pageSize\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/nicole/news-react-js/src/Store/SettingReducer.js"],"names":["localSetting","JSON","parse","localStorage","getItem","initialState","light","font","pageSize","settingReducer","state","action","type","payload"],"mappings":"AAAA,MAAMA,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAArB;AAEA,IAAIC,YAAJ;;AACA,IAAIL,YAAJ,EAAiB;AACbK,EAAAA,YAAY,GAAG;AACXC,IAAAA,KAAK,EAAEN,YAAY,CAACM,KADT;AAEXC,IAAAA,IAAI,EAAEP,YAAY,CAACO,IAFR;AAGXC,IAAAA,QAAQ,EAAER,YAAY,CAACQ;AAHZ,GAAf;AAKH,CAND,MAMM;AACFH,EAAAA,YAAY,GAAG;AACXC,IAAAA,KAAK,EAAE,OADI;AAEXC,IAAAA,IAAI,EAAE,EAFK;AAGXC,IAAAA,QAAQ,EAAE;AAHC,GAAf;AAKH;;AACD,eAAe,SAASC,cAAT,GAAsD;AAAA,MAA9BC,KAA8B,uEAAtBL,YAAsB;AAAA,MAARM,MAAQ;;AACjE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,gBAAL;AAAuB;AACnB,eAAO;AACHN,UAAAA,KAAK,EAAEK,MAAM,CAACE,OAAP,CAAeP,KADnB;AAEHC,UAAAA,IAAI,EAAEI,MAAM,CAACE,OAAP,CAAeN,IAFlB;AAGHC,UAAAA,QAAQ,EAAEG,MAAM,CAACE,OAAP,CAAeL;AAHtB,SAAP;AAKH;;AACD;AACI,aAAOE,KAAP;AATR;AAWH","sourcesContent":["const localSetting = JSON.parse(localStorage.getItem(\"settings\"));\n\nlet initialState;\nif (localSetting){\n    initialState = {\n        light: localSetting.light,\n        font: localSetting.font,\n        pageSize: localSetting.pageSize\n    }\n}else {\n    initialState = {\n        light: 'light',\n        font: 12,\n        pageSize: 20\n    }\n}\nexport default function settingReducer(state = initialState, action) {\n    switch (action.type) {\n        case 'CHANGE_SETTING': {\n            return {\n                light: action.payload.light,\n                font: action.payload.font,\n                pageSize: action.payload.pageSize\n            }\n        }\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}