{"ast":null,"code":"var _jsxFileName = \"/Users/nicole/news-react-js/src/Pages/mainPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport NewCard from \"../Components/NewCard\";\nimport { fetchNews } from \"../HTTP/NewsAPI\";\nimport Preloader from \"../Components/Preloader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MainPage = () => {\n  _s();\n\n  const [req, setReq] = useState(true);\n  const dispatcher = useDispatch();\n  const store = useSelector(state => {\n    return state;\n  });\n  useEffect(() => {\n    document.addEventListener('scroll', () => {});\n    return document.removeEventListener('scroll');\n  }, []);\n  useEffect(() => {\n    if (req) {\n      let criteriaObj = store.criteria;\n      criteriaObj.pageSize = store.setting.pageSize;\n      console.log(criteriaObj);\n      fetchNews(criteriaObj).then(data => {\n        dispatcher({\n          type: 'FETCH_NEWS',\n          payload: data.articles\n        });\n        setReq(false);\n      });\n    }\n  }, [req]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: store.news.news.length ? store.news.news.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(NewCard, {\n        New: item\n      }, item.publishedAt, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 24\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this)\n  }, void 0, false);\n};\n\n_s(MainPage, \"RI3oZfoQoA64eNBTQPZD/ydHRdw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = MainPage;\nexport default MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"sources":["/Users/nicole/news-react-js/src/Pages/mainPage.js"],"names":["React","useEffect","useState","useDispatch","useSelector","NewCard","fetchNews","Preloader","MainPage","req","setReq","dispatcher","store","state","document","addEventListener","removeEventListener","criteriaObj","criteria","pageSize","setting","console","log","then","data","type","payload","articles","news","length","map","item","index","publishedAt"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAAQC,SAAR,QAAwB,iBAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAMS,UAAU,GAAGR,WAAW,EAA9B;AACA,QAAMS,KAAK,GAAGR,WAAW,CAAES,KAAD,IAAU;AAChC,WAAOA,KAAP;AACH,GAFwB,CAAzB;AAGAZ,EAAAA,SAAS,CAAC,MAAI;AACVa,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,QAA1B,EAAoC,MAAI,CAEvC,CAFD;AAGA,WAAOD,QAAQ,CAACE,mBAAT,CAA6B,QAA7B,CAAP;AACH,GALQ,EAKP,EALO,CAAT;AAMAf,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIQ,GAAJ,EAAQ;AACJ,UAAIQ,WAAW,GAAGL,KAAK,CAACM,QAAxB;AACAD,MAAAA,WAAW,CAACE,QAAZ,GAAuBP,KAAK,CAACQ,OAAN,CAAcD,QAArC;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;AACAX,MAAAA,SAAS,CAACW,WAAD,CAAT,CAAuBM,IAAvB,CAA6BC,IAAD,IAAQ;AAChCb,QAAAA,UAAU,CAAC;AAACc,UAAAA,IAAI,EAAE,YAAP;AAAqBC,UAAAA,OAAO,EAAEF,IAAI,CAACG;AAAnC,SAAD,CAAV;AACAjB,QAAAA,MAAM,CAAC,KAAD,CAAN;AACH,OAHD;AAIH;AAEJ,GAXQ,EAWN,CAACD,GAAD,CAXM,CAAT;AAaA,sBACI;AAAA,cACKG,KAAK,CAACgB,IAAN,CAAWA,IAAX,CAAgBC,MAAhB,GAAuBjB,KAAK,CAACgB,IAAN,CAAWA,IAAX,CAAgBE,GAAhB,CAAoB,CAACC,IAAD,EAAOC,KAAP,KAAe;AACvD,0BAAO,QAAC,OAAD;AAAgC,QAAA,GAAG,EAAED;AAArC,SAAcA,IAAI,CAACE,WAAnB;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFuB,CAAvB,gBAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAHP,mBADJ;AAQH,CAjCD;;GAAMzB,Q;UAEiBL,W,EACLC,W;;;KAHZI,Q;AAmCN,eAAeA,QAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport NewCard from \"../Components/NewCard\";\nimport {fetchNews} from \"../HTTP/NewsAPI\";\nimport Preloader from \"../Components/Preloader\";\n\nconst MainPage = () => {\n    const [req, setReq] = useState(true)\n    const dispatcher = useDispatch();\n    const store = useSelector((state)=> {\n        return state\n    })\n    useEffect(()=>{\n        document.addEventListener('scroll', ()=>{\n\n        })\n        return document.removeEventListener('scroll',)\n    },[])\n    useEffect(()=>{\n        if (req){\n            let criteriaObj = store.criteria;\n            criteriaObj.pageSize = store.setting.pageSize\n            console.log(criteriaObj)\n            fetchNews(criteriaObj).then((data)=>{\n                dispatcher({type: 'FETCH_NEWS', payload: data.articles});\n                setReq(false)\n            })\n        }\n\n    }, [req])\n\n    return (\n        <>\n            {store.news.news.length?store.news.news.map((item, index)=>{\n                return <NewCard key={item.publishedAt} New={item} />\n            }):<Preloader />}\n\n        </>\n    );\n};\n\nexport default MainPage;"]},"metadata":{},"sourceType":"module"}